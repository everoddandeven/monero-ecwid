# This is a basic workflow to help you get started with Actions
name: 'Build'

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
        
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up MySQL container
      run: |
        docker run --name mysql-server \
          -e MYSQL_ROOT_PASSWORD=rootpassword \
          -e MYSQL_DATABASE=monero_ecwid \
          -e MYSQL_USER=monero_ecwid \
          -e MYSQL_PASSWORD=devpassword \
          -p 3306:3306 \
          -d mysql:8.0
        sleep 30

    - name: Install linux dependencies
      run: |
        sudo apt update
        sudo apt upgrade -y
        sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake . && sudo make
        sudo mv lib/libg* /usr/lib/
        cd 
        sudo apt install -y build-essential maven cmake pkg-config libssl-dev libzmq3-dev libunbound-dev libsodium-dev libunwind8-dev liblzma-dev libreadline6-dev libexpat1-dev libpgm-dev qttools5-dev-tools libhidapi-dev libusb-1.0-0-dev libprotobuf-dev protobuf-compiler libudev-dev libboost-all-dev libboost-chrono-dev libboost-date-time-dev libboost-filesystem-dev libboost-locale-dev libboost-program-options-dev libboost-regex-dev libboost-serialization-dev libboost-system-dev libboost-thread-dev python3 ccache doxygen graphviz nettle-dev libevent-dev
    
    - name: Install expat depencency
      run: |
        cd ~
        wget https://github.com/libexpat/libexpat/releases/download/R_2_4_8/expat-2.4.8.tar.bz2
        tar -xf expat-2.4.8.tar.bz2
        sudo rm expat-2.4.8.tar.bz2
        cd expat-2.4.8
        ./configure --enable-static --disable-shared
        make
        sudo make install
        cd ../
    
    - name: Install unbound dependency
      run: |
        cd ~
        wget https://www.nlnetlabs.nl/downloads/unbound/unbound-1.19.0.tar.gz
        tar xzf unbound-1.19.0.tar.gz
        sudo apt install -y build-essential
        sudo apt install -y libssl-dev
        sudo apt install -y libexpat1-dev
        sudo apt-get install -y bison
        sudo apt-get install -y flex
        cd unbound-1.19.0
        ./configure --with-libexpat=/usr --with-ssl=/usr --enable-static-exe
        make
        sudo make install
        cd ../

    - name: Install Java
      run: |
        sudo apt install -y openjdk-17-jdk openjdk-17-jre

    - name: Build Server
      run: mvn clean package

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: monero-ecwid
        path: target/*.jar
